{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 데이터셋에서 결측치의 위치 확인 실습"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     A    B     C\n",
      "0  1.0  NaN   9.0\n",
      "1  2.0  NaN  10.0\n",
      "2  NaN  6.0  11.0\n",
      "3  4.0  7.0  12.0\n",
      "4  5.0  8.0   NaN\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    " #예시 데이터 생성\n",
    "data = pd.DataFrame({\n",
    "    'A' : [1,2, np.nan, 4, 5],\n",
    "    'B' : [np.nan, np.nan, 6,7,8],\n",
    "    'C' : [9, 10, 11, 12, np.nan]\n",
    " })\n",
    "\n",
    "print(data)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 결측치 위치 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       A      B      C\n",
      "0  False   True  False\n",
      "1  False   True  False\n",
      "2   True  False  False\n",
      "3  False  False  False\n",
      "4  False  False   True\n"
     ]
    }
   ],
   "source": [
    "print(data.isnull())"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 데이터셋에서 결측치의 위치 확인 방법 실습-히트맵 시각화"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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AIgRlwAAxIhLAABixCUAADHiEgCAGHEJAECMuAQAIEZcAgAQE4nLVquVWAYAgC4Xicu+vr4aGhpKLAUAQBfrbefmr371q8c8PzIyUjfeeGNNnz69qqq+973vHXedZrNZzWZzzLnR1kj1NCa1Mw4AABNMW3F5880319y5c2vatGljzrdarRoaGqopU6ZUo9EYd53BwcH61re+NebceTW7/qMubGccAAAmmEarjQcmBwcH6/bbb6877rijFi5cePT85MmTa+fOnXXBBRe8pnWOtXN5Vf8KO5cAnBQPPbez0yNAV+o585nx72lnwbVr19a9995bK1eurDVr1tSLL754QoP19fXV1KlTxxzCEgCg+7X9hZ5LLrmktm3bVv/85z/rfe97Xz355JOv6aNwAABOfW09c/my0047re6666665557avHixTUyMpKeCwCALnRCcfmyq6++ui6//PLatm1bnXvuuamZAADoUq8rLquqzj777Dr77LMTswAA0OX8848AAMSISwAAYsQlAAAx4hIAgBhxCQBAjLgEACBGXAIAECMuAQCIEZcAAMSISwAAYsQlAAAx4hIAgBhxCQBAjLgEACBGXAIAECMuAQCIEZcAAMSISwAAYsQlAAAx4hIAgBhxCQBAjLgEACBGXAIAECMuAQCIEZcAAMSISwAAYsQlAAAx4hIAgBhxCQBAjLgEACBGXAIAECMuAQCIEZcAAMSISwAAYsQlAAAx4hIAgBhxCQBAjLgEACBGXAIAENNotVqtTg/BxNVsNmtwcLDWrl1bfX19nR4Huob3DrTP++bUIC45roMHD1Z/f38dOHCgpk6d2ulxoGt470D7vG9ODT4WBwAgRlwCABAjLgEAiBGXHFdfX19df/31HqyGNnnvQPu8b04NvtADAECMnUsAAGLEJQAAMeISAIAYcQkAQIy4BAAgRlzyqrZs2VKTJk2qpUuXdnoU6AorVqyoRqNx9Jg+fXotXbq0nnjiiU6PBhPe8PBwrV69ut75zndWX19fnXPOOXXllVfWpk2bOj0abRKXvKo777yzVq9eXZs3b649e/Z0ehzoCkuXLq29e/fW3r17a9OmTdXb21sf//jHOz0WTGh/+9vfat68efXII4/Ud77znXryySdr48aNtWDBglq1alWnx6NNfs8lx3T48OEaGBiorVu31vXXX18XXHBBffOb3+z0WDChrVixovbv318PPPDA0XO//e1va/78+fX888/XW9/61s4NBxPYxz72sXriiSdq165dNWXKlDHX9u/fX9OmTevMYJwQO5cc07333lvnn39+nX/++bV8+fL66U9/Wv4eAu05dOhQ3X333TVz5syaPn16p8eBCemFF16ojRs31qpVq14RllUlLLtQb6cHYGJat25dLV++vKr+52O+Q4cO1aZNm2rRokUdngwmtg0bNtRpp51WVf/7CcCGDRuqp8ff5eFYdu/eXa1Wq2bNmtXpUQjxfzteYdeuXfWHP/yhrr766qqq6u3trWXLltWdd97Z4clg4luwYEHt2LGjduzYUY8//nh95CMfqY9+9KP197//vdOjwYT08qdijUajw5OQYueSV1i3bl299NJL9ba3ve3ouVarVZMnT659+/bV6aef3sHpYGKbMmVKzZw58+jP8+bNq/7+/rr99tvrhhtu6OBkMDG9613vqkajUUNDQ/XJT36y0+MQYOeSMV566aVav359ffe73z26+7Jjx47auXNnnXvuuXX33Xd3ekToKo1Go3p6eurIkSOdHgUmpLe85S21ZMmSuvXWW+vw4cOvuL5///6TPxSvi7hkjA0bNtS+ffvqS1/6Us2ZM2fM8elPf7rWrVvX6RFhQms2mzU8PFzDw8M1NDRUq1evrkOHDtWVV17Z6dFgwvrRj35UIyMj9f73v7/uv//++vOf/1xDQ0P1gx/8oC699NJOj0ebxCVjrFu3rhYtWlT9/f2vuPapT32qduzYUdu3b+/AZNAdNm7cWAMDAzUwMFAf+MAHauvWrXXffffVFVdc0enRYMI677zzavv27bVgwYK67rrras6cObV48eLatGlT3XbbbZ0ejzb5PZcAAMTYuQQAIEZcAgAQIy4BAIgRlwAAxIhLAABixCUAADHiEgCAGHEJAECMuAQAIEZcAgAQIy4BAIj5byzZhh/GiCNJAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns \n",
    "\n",
    "\n",
    "#예시 데이터 생성\n",
    "hit_data = pd.DataFrame({\n",
    "    'A' : [1,np.nan, np.nan, 4, 5],\n",
    "    'B' : [np.nan, np.nan, 6,7,8],\n",
    "    'C' : [9, np.nan, np.nan, 12, np.nan]\n",
    " })\n",
    "\n",
    "plt.figure (figsize=(8,6))\n",
    "sns.heatmap(hit_data.isnull(), cmap='viridis', cbar=False)\n",
    "plt.show()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 데이터셋에서 결측치의 위치 확인 - 개수 확인 방법"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A    2\n",
      "B    2\n",
      "C    3\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#예시 데이터 생성\n",
    "count_data = pd.DataFrame({\n",
    "    'A' : [1,np.nan, np.nan, 4, 5],\n",
    "    'B' : [np.nan, np.nan, 6,7,8],\n",
    "    'C' : [9, np.nan, np.nan, 12, np.nan]\n",
    " })\n",
    "\n",
    "# 결측치 개수 확인 \n",
    "missing_count = count_data.isnull().sum()\n",
    "print(missing_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "AI",
   "language": "python",
   "name": "ai"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
